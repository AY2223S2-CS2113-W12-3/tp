@startuml
'https://plantuml.com/sequence-diagram

participant RestockParser
activate RestockParser
RestockParser -> RestockCommand: run()
activate RestockCommand
RestockCommand->RestockCommand: restockItem()
activate RestockCommand
ref over RestockCommand: Retrieve Item from \n Hashmap and keep \n track of previous Quantity Value.
RestockCommand -> RestockCommand: checkRestockCommandLength()
activate RestockCommand

alt Command Length != 2
ref over RestockCommand: Handle Missing Parameters \n Exception
end


activate RestockCommand
RestockCommand --> RestockCommand
deactivate RestockCommand
RestockCommand -> RestockCommand: updateItemQuantity()
activate RestockCommand
RestockCommand -> RestockCommand: handleUserRestockCommands()
activate RestockCommand
ref over RestockCommand
Update the Quantity of Item if user input is valid
end
RestockCommand --> RestockCommand
deactivate RestockCommand
RestockCommand --> RestockCommand
deactivate RestockCommand
RestockCommand --> RestockCommand
deactivate RestockCommand

ref over RestockCommand: Update Hashmap and \n Tree
alt Valid Inputs
RestockCommand -> UI: printRestockDetails()
activate UI
UI-->RestockCommand
deactivate UI
RestockCommand --> RestockParser
else Item Does Not Exist
RestockCommand -> UI: printItemNotFound()
activate UI
UI-->RestockCommand
deactivate UI
RestockCommand --> RestockParser
else Missing Input Parameters
RestockCommand -> UI: printInvalidRestockCommand()
activate UI
UI-->RestockCommand
deactivate UI
RestockCommand --> RestockParser
else Invalid Input Parameters
RestockCommand -> UI: printInvalidAddQuantityInput()
activate UI
UI-->RestockCommand
deactivate UI
RestockCommand --> RestockParser
end
destroy UI
destroy RestockCommand





@enduml